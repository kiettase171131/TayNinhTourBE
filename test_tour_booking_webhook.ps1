# PowerShell script ƒë·ªÉ test Tour Booking PayOS Webhook
# Ch·∫°y script n√†y ƒë·ªÉ test webhook endpoints (ƒë∆°n gi·∫£n nh∆∞ product payment)

$baseUrl = "https://localhost:7205"
$headers = @{
    "Content-Type" = "application/json"
    "Accept" = "application/json"
}

Write-Host "üß™ Testing Tour Booking PayOS Webhook Endpoints" -ForegroundColor Green
Write-Host "Server: $baseUrl" -ForegroundColor Yellow
Write-Host "Format: ƒê∆°n gi·∫£n nh∆∞ product payment (kh√¥ng c·∫ßn signature)" -ForegroundColor Cyan
Write-Host ""

# Test orderCode (gi·ªëng format PayOS)
$testOrderCode = "TNDT1234567890"

# Test Success Webhook
Write-Host "1Ô∏è‚É£ Testing Success Webhook..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/tour-booking-payment/webhook/paid/$testOrderCode" -Method POST -Headers $headers -SkipCertificateCheck
    Write-Host "‚úÖ Success Webhook Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Success Webhook Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    if ($_.Exception.Response) {
        $reader = New-Object System.IO.StreamReader($_.Exception.Response.GetResponseStream())
        $responseBody = $reader.ReadToEnd()
        Write-Host "Response Body: $responseBody" -ForegroundColor Yellow
    }
}

Write-Host ""

# Test Cancel Webhook
Write-Host "2Ô∏è‚É£ Testing Cancel Webhook..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/tour-booking-payment/webhook/cancelled/$testOrderCode" -Method POST -Headers $headers -SkipCertificateCheck
    Write-Host "‚úÖ Cancel Webhook Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Cancel Webhook Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    if ($_.Exception.Response) {
        $reader = New-Object System.IO.StreamReader($_.Exception.Response.GetResponseStream())
        $responseBody = $reader.ReadToEnd()
        Write-Host "Response Body: $responseBody" -ForegroundColor Yellow
    }
}

Write-Host ""

# Test Frontend Callback (existing endpoint)
Write-Host "3Ô∏è‚É£ Testing Frontend Callback..." -ForegroundColor Cyan
$frontendCallbackData = @{
    orderCode = $testOrderCode
    status = "PAID"
    transactionDateTime = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/tour-booking-payment/payment-success" -Method POST -Headers $headers -Body $frontendCallbackData -SkipCertificateCheck
    Write-Host "‚úÖ Frontend Callback Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Frontend Callback Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""
Write-Host "üèÅ Test completed!" -ForegroundColor Green
Write-Host ""
Write-Host "üìù Notes:" -ForegroundColor Yellow
Write-Host "- Webhook endpoints ƒë∆°n gi·∫£n nh∆∞ product payment" -ForegroundColor Yellow
Write-Host "- Kh√¥ng c·∫ßn signature verification" -ForegroundColor Yellow
Write-Host "- PayOS s·∫Ω g·ªçi v·ªõi orderCode trong URL path" -ForegroundColor Yellow
Write-Host "- ƒê·∫£m b·∫£o server ƒëang ch·∫°y tr√™n https://localhost:7205" -ForegroundColor Yellow
Write-Host "- C·∫ßn c√≥ booking v·ªõi orderCode '$testOrderCode' ƒë·ªÉ test th√†nh c√¥ng" -ForegroundColor Yellow
