# PowerShell script ƒë·ªÉ ki·ªÉm tra webhook endpoints hi·ªán t·∫°i
# Ki·ªÉm tra xem product payment v√† tour booking webhooks c√≥ ho·∫°t ƒë·ªông kh√¥ng

$baseUrl = "http://localhost:5267"
$headers = @{
    "Content-Type" = "application/json"
    "Accept" = "application/json"
}

Write-Host "üîç KI·ªÇM TRA WEBHOOK ENDPOINTS HI·ªÜN T·∫†I" -ForegroundColor Green
Write-Host "Server: $baseUrl" -ForegroundColor Yellow
Write-Host ""

# Test orderCode
$testOrderCode = "TNDT1234567890"

Write-Host "üìã Danh s√°ch endpoints s·∫Ω test:" -ForegroundColor Cyan
Write-Host "1. Product Payment - PAID: /api/payment-callback/paid/$testOrderCode" -ForegroundColor White
Write-Host "2. Product Payment - CANCELLED: /api/payment-callback/cancelled/$testOrderCode" -ForegroundColor White
Write-Host "3. Tour Booking - PAID: /api/tour-booking-payment/webhook/paid/$testOrderCode" -ForegroundColor White
Write-Host "4. Tour Booking - CANCELLED: /api/tour-booking-payment/webhook/cancelled/$testOrderCode" -ForegroundColor White
Write-Host "5. Tour Booking - Frontend Success: /api/tour-booking-payment/payment-success" -ForegroundColor White
Write-Host ""

# Test 1: Product Payment PAID
Write-Host "1Ô∏è‚É£ Testing Product Payment PAID Webhook..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/payment-callback/paid/$testOrderCode" -Method POST -Headers $headers -SkipCertificateCheck
    Write-Host "‚úÖ Product Payment PAID Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Product Payment PAID Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""

# Test 2: Product Payment CANCELLED
Write-Host "2Ô∏è‚É£ Testing Product Payment CANCELLED Webhook..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/payment-callback/cancelled/$testOrderCode" -Method POST -Headers $headers -SkipCertificateCheck
    Write-Host "‚úÖ Product Payment CANCELLED Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Product Payment CANCELLED Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""

# Test 3: Tour Booking PAID
Write-Host "3Ô∏è‚É£ Testing Tour Booking PAID Webhook..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/tour-booking-payment/webhook/paid/$testOrderCode" -Method POST -Headers $headers -SkipCertificateCheck
    Write-Host "‚úÖ Tour Booking PAID Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Tour Booking PAID Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""

# Test 4: Tour Booking CANCELLED
Write-Host "4Ô∏è‚É£ Testing Tour Booking CANCELLED Webhook..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/tour-booking-payment/webhook/cancelled/$testOrderCode" -Method POST -Headers $headers -SkipCertificateCheck
    Write-Host "‚úÖ Tour Booking CANCELLED Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Tour Booking CANCELLED Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""

# Test 5: Tour Booking Frontend Success
Write-Host "5Ô∏è‚É£ Testing Tour Booking Frontend Success..." -ForegroundColor Cyan
$frontendCallbackData = @{
    orderCode = $testOrderCode
    status = "PAID"
    transactionDateTime = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/tour-booking-payment/payment-success" -Method POST -Headers $headers -Body $frontendCallbackData -SkipCertificateCheck
    Write-Host "‚úÖ Tour Booking Frontend Success Response:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 2
} catch {
    Write-Host "‚ùå Tour Booking Frontend Success Failed:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""
Write-Host "üèÅ Test completed!" -ForegroundColor Green
Write-Host ""

# Summary
Write-Host "üìä SUMMARY & NEXT STEPS:" -ForegroundColor Yellow
Write-Host ""
Write-Host "‚úÖ N·∫øu Product Payment webhooks ho·∫°t ƒë·ªông:" -ForegroundColor Green
Write-Host "   ‚Üí PayOS ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng" -ForegroundColor White
Write-Host "   ‚Üí Server ƒë√£ accessible t·ª´ PayOS" -ForegroundColor White
Write-Host "   ‚Üí Ch·ªâ c·∫ßn th√™m tour booking URLs v√†o PayOS Dashboard" -ForegroundColor White
Write-Host ""
Write-Host "‚ùå N·∫øu Product Payment webhooks kh√¥ng ho·∫°t ƒë·ªông:" -ForegroundColor Red
Write-Host "   ‚Üí C·∫ßn ki·ªÉm tra PayOS Dashboard configuration" -ForegroundColor White
Write-Host "   ‚Üí C√≥ th·ªÉ c·∫ßn setup ngrok ho·∫∑c public domain" -ForegroundColor White
Write-Host "   ‚Üí C·∫ßn c·∫•u h√¨nh webhook URLs t·ª´ ƒë·∫ßu" -ForegroundColor White
Write-Host ""
Write-Host "üîÑ N·∫øu Tour Booking webhooks kh√¥ng ho·∫°t ƒë·ªông:" -ForegroundColor Yellow
Write-Host "   ‚Üí Endpoints ƒë√£ ƒë∆∞·ª£c t·∫°o nh∆∞ng ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh trong PayOS" -ForegroundColor White
Write-Host "   ‚Üí C·∫ßn th√™m URLs v√†o PayOS Dashboard" -ForegroundColor White
Write-Host ""
Write-Host "üìù C·∫ßn ki·ªÉm tra:" -ForegroundColor Cyan
Write-Host "1. PayOS Dashboard: https://business.payos.vn/" -ForegroundColor White
Write-Host "2. Webhook URLs hi·ªán t·∫°i ƒë√£ c·∫•u h√¨nh" -ForegroundColor White
Write-Host "3. Production server domain" -ForegroundColor White
Write-Host "4. Product payment c√≥ ho·∫°t ƒë·ªông trong th·ª±c t·∫ø kh√¥ng" -ForegroundColor White
